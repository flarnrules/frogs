(function(){var D=BTLDR&&BTLDR.svg?BTLDR.svg:null; if(!D){throw new Error('BTLDR.svg missing');}var NS='http:'+'\x2F\x2Fwww.w3.org/2000/svg';function E(t,a){var e=document.createElementNS(NS,t);if(a){for(var k in a){if(a.hasOwnProperty(k)){e.setAttribute(k,String(a[k]));}}}return e;}var PAYLOAD='w,w|P:#5fcde4,#fbf236,#df7126,#6abe30,#7bdb39,#93e44c,#222034,#ffffff,#5fb127,#fff97b,#5b6ee1,#49b287,#37946e,#2c7859,#276a4f|R:w.0;w.0;q.0,2.1,4.0;p.0,1.1,2.2,1.1,3.0;p.0,1.1,2.2,1.1,3.0;6.0,1.3,f.0,1.3,3.0,2.1,4.0;7.0,1.3,d.0,1.3,a.0;8.0,4.4,5.0,4.4,b.0;5.0,2.3,1.4,3.5,1.3,5.4,3.5,1.3,1.4,2.3,8.0;7.0,1.4,1.6,2.7,6.3,1.6,2.7,2.3,1.4,9.0;6.0,1.4,1.3,3.8,6.3,3.8,3.3,1.4,8.0;5.0,1.4,i.3,1.4,7.0;5.0,1.4,i.3,1.4,7.0;5.0,1.4,j.3,1.4,6.0;5.0,1.4,9.5,a.3,1.4,6.0;4.0,1.4,1.3,9.1,5.5,5.3,1.4,6.0;4.0,1.4,1.3,e.1,1.5,4.3,1.4,6.0;4.0,1.4,1.3,f.1,1.5,4.3,4.4,2.0;3.0,1.4,2.3,g.1,1.9,2.3,1.4,4.3,1.4,1.0;3.0,1.4,2.3,g.1,1.9,5.3,1.4,1.3,1.4,1.0;3.0,1.4,2.3,g.1,1.9,4.3,1.4,2.3,1.4,1.0;3.0,1.4,2.3,g.1,1.9,3.3,1.4,3.3,1.4,1.0;2.0,1.4,2.3,1.4,g.1,1.9,3.3,1.4,2.3,1.4,2.0;2.0,1.4,1.3,1.4,1.3,1.4,e.1,1.9,3.3,1.4,2.3,1.4,3.0;2.0,1.4,1.3,1.4,1.3,1.4,d.1,1.9,1.4,5.3,1.4,1.3,3.0;1.0,1.4,1.3,1.4,1.3,1.4,1.3,1.4,b.1,1.9,1.4,1.3,1.4,3.3,1.4,1.3,1.4,1.3,2.0;1.0,2.3,1.4,1.3,1.4,1.3,1.4,8.1,2.9,2.4,4.3,1.4,2.3,1.4,1.3,1.4,1.3,1.0;1.a,1.b,3.c,1.d,1.e,4.d,1.e,3.d,1.e,6.d,1.e,6.d,1.e,1.b,1.a;2.a,2.b,2.a,3.c,2.d,4.c,1.d,7.c,1.d,5.b,3.a;5.a,2.b,2.d,6.c,1.d,8.b,8.a;7.a,9.b,g.a;w.a';var BASE_PAL=["#5fcde4","#fbf236","#df7126","#6abe30","#7bdb39","#93e44c","#222034","#ffffff","#5fb127","#fff97b","#5b6ee1","#49b287","#37946e","#2c7859","#276a4f"];var PROBS={"flipx":0.5,"flipy":0.0,"rot90":0.0};var MODE='gradient';var VAR={"hmin":0,"hmax":360,"smin":0.25,"smax":2.05,"lmin":0.97,"lmax":1.03};var FX={"hue_anim":{"prob":0.4,"period_min":1,"period_max":14},"glitch_turb":{"prob":0.4,"amp_min":0.1,"amp_max":5.5,"period_min":1,"period_max":12},"glitch_aberr":{"prob":0.4,"dx_min":0.0,"dx_max":1.6,"dy_min":-1.25,"dy_max":1.25},"glitch_noise":{"prob":0.7,"amount_min":0.02,"amount_max":0.82},"glitch_fray":{"prob":0.4,"dir":"random","shift_min":0.3,"shift_max":2.6,"density_min":0.25,"density_max":1.75},"recursion":{"prob":0.2,"mode_weights":{"one":0.35,"some":0.45,"all":0.2},"some_frac_min":0.2,"some_frac_max":0.6,"max_pixels":20000}};var parts=PAYLOAD.split('|'); var wh=parts[0], rr=parts[2];function i36(s){var n=parseInt(s,36);return isNaN(n)?0:n;}var whp=wh.split(','); var W=i36(whp[0])||parseInt(whp[0],10); var H=i36(whp[1])||parseInt(whp[1],10);var rstr=rr.indexOf('R:')===0? rr.slice(2) : rr;var rows=(function(){var RWS=rstr.split(';'), out=[], i,j,tok,li,row; for(i=0;i<RWS.length;i++){ if(!RWS[i]){continue;} var toks=RWS[i].split(','); row=[]; for(j=0;j<toks.length;j++){ tok=toks[j]; if(!tok){continue;} li=tok.split('.'); row.push([i36(li[0]), i36(li[1])]); } out.push(row);} return out;})();function R(){ try{return (typeof BTLDR!=='undefined' && typeof BTLDR.rnd==='function')?BTLDR.rnd():Math.random();}catch(_){return Math.random();} }function clamp01(x){return x<0?0:(x>1?1:x);} function rotHex(hex,deg,ss,ll){var hx=(hex+'').replace('#',''); if(hx.length===3){hx=hx.charAt(0)+hx.charAt(0)+hx.charAt(1)+hx.charAt(1)+hx.charAt(2)+hx.charAt(2);} var r=parseInt(hx.substr(0,2),16)/255, g=parseInt(hx.substr(2,2),16)/255, b=parseInt(hx.substr(4,2),16)/255; var maxV=r>g?(r>b?r:b):(g>b?g:b), minV=r<g?(r<b?r:b):(g<b?g:b); var h=0,s=0,l=(maxV+minV)/2; var d=maxV-minV; if(d!==0){ s=l>0.5? d/(2-maxV-minV) : d/(maxV+minV); if(maxV===r){ h=(g-b)/d + (g<b?6:0);} else if(maxV===g){ h=(b-r)/d + 2;} else { h=(r-g)/d + 4;} h/=6; } h=(h+(deg/360))%1; s=clamp01(s*ss); l=clamp01(l*ll); var q=l<0.5? l*(1+s) : l+s-l*s; var p=2*l-q; function Hc(t){ if(t<0)t+=1; if(t>1)t-=1; if(t<1/6)return p+(q-p)*6*t; if(t<1/2)return q; if(t<2/3)return p+(q-p)*(2/3-t)*6; return p;} var rr=Math.round(Hc(h+1/3)*255), gg=Math.round(Hc(h)*255), bb=Math.round(Hc(h-1/3)*255); function hx2(n){var s=n.toString(16); return s.length<2?('0'+s):s;} return '#'+hx2(rr)+hx2(gg)+hx2(bb);} function pickRange(lo,hi){ var t=R(); return lo+(hi-lo)*t; } function pickWeighted(w){ var s=0,k; for(k in w){ if(w.hasOwnProperty(k)){ s+=w[k]; } } var r=s*R(), acc=0; for(k in w){ if(w.hasOwnProperty(k)){ acc+=w[k]; if(r<=acc) return k; } } return k; } var shift=pickRange((VAR&&VAR.hmin!=null)?VAR.hmin:0,(VAR&&VAR.hmax!=null)?VAR.hmax:360); var ss=pickRange((VAR&&VAR.smin!=null)?VAR.smin:1,(VAR&&VAR.smax!=null)?VAR.smax:1); var ll=pickRange((VAR&&VAR.lmin!=null)?VAR.lmin:1,(VAR&&VAR.lmax!=null)?VAR.lmax:1); var palette=(function(){var i, out=[]; for(i=0;i<BASE_PAL.length;i++){ out.push(rotHex(BASE_PAL[i], shift, ss, ll)); } return out;})(); var maxIdx=0; var y, r, k; for(y=0;y<rows.length;y++){ r=rows[y]; for(k=0;k<r.length;k++){ if(r[k][1]>maxIdx){maxIdx=r[k][1];}}} if(!(palette.length>maxIdx)){throw new Error('Palette too small');} var flipX=R()<((PROBS&&PROBS.flipx)||0), flipY=R()<((PROBS&&PROBS.flipy)||0), rot90=R()<((PROBS&&PROBS.rot90)||0); var vw=rot90?H:W, vh=rot90?W:H; D.setAttribute('viewBox','0 0 '+vw+' '+vh); D.setAttribute('preserveAspectRatio','xMidYMid meet'); D.setAttribute('width','100%'); D.setAttribute('height','100%'); D.setAttribute('overflow','visible'); var Root=E('g',{}); D.appendChild(Root); var ST=E('style',{}); ST.textContent='*{shape-rendering:crispEdges}'; Root.appendChild(ST); function buildFilter(){ var last='SourceGraphic', has=false; var F=E('filter',{id:'fx'});   if(FX && FX.hue_anim && R()<FX.hue_anim.prob){ var pmin=FX.hue_anim.period_min||8, pmax=FX.hue_anim.period_max||14; var per=String(pickRange(pmin,pmax)); var M=E('feColorMatrix',{in:last,type:'hueRotate',values:'0',result:'hue'}); var A=document.createElementNS(NS,'animate'); A.setAttribute('attributeName','values'); A.setAttribute('values','0;360'); A.setAttribute('dur',per+'s'); A.setAttribute('repeatCount','indefinite'); M.appendChild(A); F.appendChild(M); last='hue'; has=true; }   if(FX && FX.glitch_turb && R()<FX.glitch_turb.prob){ var amin=FX.glitch_turb.amp_min||0.5, amax=FX.glitch_turb.amp_max||2.5; var pmin2=FX.glitch_turb.period_min||3, pmax2=FX.glitch_turb.period_max||8; var amp=String(pickRange(amin,amax)); var per2=String(pickRange(pmin2,pmax2)); var T=E('feTurbulence',{'type':'turbulence','baseFrequency':'0.02','numOctaves':'1','seed':'1','result':'n'}); var Ag=document.createElementNS(NS,'animate'); Ag.setAttribute('attributeName','seed'); Ag.setAttribute('values','0;6;0'); Ag.setAttribute('dur',per2+'s'); Ag.setAttribute('repeatCount','indefinite'); T.appendChild(Ag); F.appendChild(T); var Dm=E('feDisplacementMap',{'in':last,'in2':'n','scale':amp,'xChannelSelector':'R','yChannelSelector':'G','result':'gl'}); F.appendChild(Dm); last='gl'; has=true; }   if(FX && FX.glitch_aberr && R()<FX.glitch_aberr.prob){ var dx=String(pickRange(FX.glitch_aberr.dx_min||0, FX.glitch_aberr.dx_max||0.6)); var dy=String(pickRange(FX.glitch_aberr.dy_min||-0.25, FX.glitch_aberr.dy_max||0.25)); var Rm=E('feColorMatrix',{'in':last,'type':'matrix','values':'1 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 0','result':'r1'}); var Gm=E('feColorMatrix',{'in':last,'type':'matrix','values':'0 0 0 0 0  0 1 0 0 0  0 0 0 0 0  0 0 0 1 0','result':'g1'}); var Bm=E('feColorMatrix',{'in':last,'type':'matrix','values':'0 0 0 0 0  0 0 0 0 0  0 0 1 0 0  0 0 0 1 0','result':'b1'}); F.appendChild(Rm); F.appendChild(Gm); F.appendChild(Bm); var Ro=E('feOffset',{'in':'r1','dx':dx,'dy':dy,'result':'r2'}); var Go=E('feOffset',{'in':'g1','dx':'0','dy':'0','result':'g2'}); var Bo=E('feOffset',{'in':'b1','dx':'-'+dx,'dy':'-'+dy,'result':'b2'}); F.appendChild(Ro); F.appendChild(Go); F.appendChild(Bo); var C1=E('feComposite',{'in':'r2','in2':'g2','operator':'lighter','result':'rg'}); var C2=E('feComposite',{'in':'rg','in2':'b2','operator':'lighter','result':'rgb'}); F.appendChild(C1); F.appendChild(C2); last='rgb'; has=true; }   if(FX && FX.glitch_noise && R()<FX.glitch_noise.prob){ var amt=String(Math.max(0,Math.min(1,pickRange(FX.glitch_noise.amount_min||0.02, FX.glitch_noise.amount_max||0.12)))); var Nt=E('feTurbulence',{'type':'fractalNoise','baseFrequency':'0.9','numOctaves':'1','seed':'2','result':'grain'}); F.appendChild(Nt); var Na=E('feColorMatrix',{'in':'grain','type':'matrix','values':'1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 '+amt+' 0','result':'grainA'}); F.appendChild(Na); var Bn2=E('feBlend',{'in':last,'in2':'grainA','mode':'overlay','result':'noisy'}); F.appendChild(Bn2); last='noisy'; has=true; }   if(FX && FX.glitch_fray && R()<FX.glitch_fray.prob){ var dir=FX.glitch_fray.dir||'random'; if(dir==='random'){ var dirs=['top','right','bottom','left']; dir=dirs[Math.floor(R()*dirs.length)]; } var sh=pickRange(FX.glitch_fray.shift_min||0.3, FX.glitch_fray.shift_max||1.6); var dens=pickRange(FX.glitch_fray.density_min||0.25, FX.glitch_fray.density_max||0.75); var dx='0', dy='0'; if(dir==='right'){ dx=String(sh); } else if(dir==='left'){ dx=String(-sh); } else if(dir==='bottom'){ dy=String(sh); } else if(dir==='top'){ dy=String(-sh); } var Off=E('feOffset',{'in':last,'dx':dx,'dy':dy,'result':'shifted'}); F.appendChild(Off); var Nt2=E('feTurbulence',{'type':'fractalNoise','baseFrequency':'0.8','numOctaves':'1','seed':'4','result':'n2'}); F.appendChild(Nt2); var thr=Math.max(0,min=1) || 0; var tlo=String(1-dens); var CM=E('feComponentTransfer',{'in':'n2','result':'mask'}); var Rf=document.createElementNS(NS,'feFuncR'); Rf.setAttribute('type','table'); Rf.setAttribute('tableValues','0 '+tlo+' 1'); var Gf=document.createElementNS(NS,'feFuncG'); Gf.setAttribute('type','table'); Gf.setAttribute('tableValues','0 '+tlo+' 1'); var Bf=document.createElementNS(NS,'feFuncB'); Bf.setAttribute('type','table'); Bf.setAttribute('tableValues','0 '+tlo+' 1'); var Af=document.createElementNS(NS,'feFuncA'); Af.setAttribute('type','table'); Af.setAttribute('tableValues','0 '+tlo+' 1'); CM.appendChild(Rf); CM.appendChild(Gf); CM.appendChild(Bf); CM.appendChild(Af); F.appendChild(CM); var Cut=E('feComposite',{'in':'shifted','in2':'mask','operator':'in','result':'frayBits'}); F.appendChild(Cut); var Over=E('feComposite',{'in':'frayBits','in2':last,'operator':'over','result':'frayed'}); F.appendChild(Over); last='frayed'; has=true; }   if(has){ Root.setAttribute('filter','url(#fx)'); D.appendChild(F); } return has; } function makeGroups(parent,useGradient){ var mp={},gi; if(useGradient){ var defsG=E('defs',{}); parent.appendChild(defsG); for(gi=0;gi<palette.length;gi++){ var id='g'+gi; var lg=E('linearGradient',{id:id,gradientUnits:'userSpaceOnUse',x1:'0',y1:'0',x2:String(vw),y2:'0'}); var c0=palette[gi], c1=palette[(gi+1)%palette.length]; var s0=E('stop',{'stop-color':c0,offset:'0%'}); var s1=E('stop',{'stop-color':c1,offset:'100%'}); lg.appendChild(s0); lg.appendChild(s1); defsG.appendChild(lg); mp[gi]=E('g',{fill:'url(#'+id+')'}); parent.appendChild(mp[gi]); } } else { for(gi=0;gi<palette.length;gi++){ mp[gi]=E('g',{fill:palette[gi]}); parent.appendChild(mp[gi]); } } return mp; } function paintInto(groups){ var y2,x2,r2,k2,len,ci,x0,yy2,a,nx,ny; if(!rot90){ for(y2=0;y2<rows.length;y2++){ x2=0; r2=rows[y2]; yy2 = flipY ? (vh-1 - y2) : y2; for(k2=0;k2<r2.length;k2++){ len=r2[k2][0]; ci=r2[k2][1]; x0 = flipX ? (vw - (x2+len)) : x2; a=E('rect',{x:String(x0),y:String(yy2),width:String(len),height:'1'}); groups[ci].appendChild(a); x2+=len; } } } else { for(y2=0;y2<rows.length;y2++){ x2=0; r2=rows[y2]; for(k2=0;k2<r2.length;k2++){ len=r2[k2][0]; ci=r2[k2][1]; nx=(vh-1 - y2); ny=x2; if(flipX){ nx=(vh - 1) - nx; } if(flipY){ ny=(vw - len) - ny; } a=E('rect',{x:String(nx),y:String(ny),width:'1',height:String(len)}); groups[ci].appendChild(a); x2+=len; } } } } function pickChannels(weights, frac){ var N=palette.length, arr=[], i; var mode=pickWeighted(weights||{'some':1}); if(mode==='all'){ for(i=0;i<N;i++){arr.push(i);} return arr; } if(mode==='one'){ arr.push(Math.floor(R()*N)); return arr; } var f=(frac!=null)?frac:0.4; for(i=0;i<N;i++){ if(R()<f){arr.push(i);} } if(arr.length===0){arr.push(Math.floor(R()*N));} return arr; } function paintRectMode(){ var useGrad=(MODE==='gradient'); var G0=makeGroups(Root,useGrad); paintInto(G0); } function paintRecursivePerChannel(rec){ var pix=W*H; if(pix>(rec.max_pixels||20000)){ paintRectMode(); return; } var defs=E('defs',{}); Root.appendChild(defs); var sym=E('symbol',{id:'T',viewBox:'0 0 '+W+' '+H}); defs.appendChild(sym); var Gs=makeGroups(sym,(MODE==='gradient')); paintInto(Gs); var someFrac=pickRange(rec.some_frac_min||0.2, rec.some_frac_max||0.6); var channels=(rec.mode_weights?pickChannels(rec.mode_weights, someFrac):pickChannels({'some':1}, someFrac)); var cmap={}, i; for(i=0;i<channels.length;i++){ cmap[channels[i]]=1; } var y3,x3,r3,k3,len3,ci3,x0,yy3,u,nx3,ny3,dx; if(!rot90){ for(y3=0;y3<rows.length;y3++){ x3=0; r3=rows[y3]; yy3 = flipY ? (H-1 - y3) : y3; for(k3=0;k3<r3.length;k3++){ len3=r3[k3][0]; ci3=r3[k3][1]; x0 = flipX ? (W - (x3+len3)) : x3; if(cmap[ci3]){ for(dx=0;dx<len3;dx++){ u=E('use',{'href':'#T',x:String(x0+dx),y:String(yy3),width:'1',height:'1'}); u.setAttribute('xlink:href','#T'); Root.appendChild(u);} } else { var a=E('rect',{x:String(x0),y:String(yy3),width:String(len3),height:'1'}); var gtmp=E('g',{fill:(MODE==='gradient'?'url(#g'+ci3+')':palette[ci3])}); gtmp.appendChild(a); Root.appendChild(gtmp); } x3+=len3; } } } else { for(y3=0;y3<rows.length;y3++){ x3=0; r3=rows[y3]; for(k3=0;k3<r3.length;k3++){ len3=r3[k3][0]; ci3=r3[k3][1]; nx3=(H-1 - y3); ny3=x3; if(flipX){ nx3=(H - 1) - nx3; } if(flipY){ ny3=(W - len3) - ny3; } if(cmap[ci3]){ for(dx=0;dx<len3;dx++){ u=E('use',{'href':'#T',x:String(nx3),y:String(ny3+dx),width:'1',height:'1'}); u.setAttribute('xlink:href','#T'); Root.appendChild(u);} } else { var a2=E('rect',{x:String(nx3),y:String(ny3),width:'1',height:String(len3)}); var gtmp2=E('g',{fill:(MODE==='gradient'?'url(#g'+ci3+')':palette[ci3])}); gtmp2.appendChild(a2); Root.appendChild(gtmp2); } x3+=len3; } } } } var usedFilter = buildFilter(); var doRec = false; if(FX && FX.recursion && R()<FX.recursion.prob){ doRec = true; } if(doRec){ paintRecursivePerChannel(FX.recursion); } else { paintRectMode(); } })();